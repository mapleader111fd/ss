{"version":3,"sources":["utils/misc.ts","utils/fetchNui.ts","hooks/useExitListener.ts","typings/gameOptions.ts","assets/crime-hacker.svg","components/Game/Splash/Splash.tsx","utils/random.ts","components/Game/Hack/useHackMoveListener.ts","components/Game/Hack/Hack.tsx","components/Game/Game.tsx","components/App/App.tsx","hooks/useNuiEvent.ts","index.tsx"],"names":["noop","fetchNui","eventName","data","a","options","method","headers","body","JSON","stringify","resourceName","window","GetParentResourceName","fetch","resp","json","respFormatted","HackType","GameType","SplashText","LISTENED_KEYS","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","type","_ref3","className","d","SvgCrimeHacker","_ref","svgRef","title","titleId","props","id","xmlns","xmlnsXlink","x","y","viewBox","style","enableBackground","xmlSpace","ref","ForwardRef","Splash","text","PREPARING","randomNumber","min","max","Math","floor","random","getRandomSetChar","hackType","characterString","NUMERIC","ALPHABET","ALPHANUMERIC","GREEK","BRAILLE","RUNES","charAt","Hack","gameType","duration","timerStart","useRef","Date","timerGame","timerTime","timerFinish","useState","correctPosition","codes","showCorrect","setShowCorrect","codesPosition","currentPosition","timerValue","setTimerValue","position","group","push","getGroupFromPosition","toFind","moveCodes","useCallback","codesPos","current","temporaryCodes","shift","timer","msString","timerNow","timerDiff","setTime","getTime","ms","getMilliseconds","sec","getSeconds","check","clearInterval","currentAttempt","setTimeout","resetGame","clearTimeout","hackClassName","classNames","MIRRORED","useEffect","tempCodes","generateCodes","setInterval","checkTrail","trailPosition","positionSetter","valueChecker","setterRef","valueRef","positionRef","keyHandler","e","includes","code","addEventListener","removeEventListener","useHackMoveListener","newPos","map","positionToCheck","codesCorrect","classname","some","tf","Game","splashText","setSplashText","gameStarted","setGameStarted","CONNECTING","App","isVisible","setIsVisible","setHackType","RANDOM","setGameType","setDuration","action","handler","savedHandler","eventListener","event","eventAction","useNuiEvent","show","selectedHackType","selectedGameType","enumValues","visibleSetter","useExitListener","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b787532.chunk.js","sourcesContent":["// Will return whether the current environment is in a regular browser\r\n// and not CEF\r\nexport const isEnvBrowser = (): boolean => !(window as any).invokeNative\r\n\r\n// Basic no operation function\r\nexport const noop = () => {}","/**\r\n * Simple wrapper around fetch API tailored for CEF/NUI use. This abstraction\r\n * can be extended to include AbortController if needed or if the response isn't\r\n * JSON. Tailor it to your needs.\r\n *\r\n * @param eventName - The endpoint eventname to target\r\n * @param data - Data you wish to send in the NUI Callback\r\n *\r\n * @return returnData - A promise for the data sent back by the NuiCallbacks CB argument\r\n */\r\n\r\nexport async function fetchNui<T = any>(eventName: string, data?: any): Promise<T> {\r\n  const options = {\r\n    method: 'post',\r\n    headers: {\r\n      'Content-Type': 'application/json; charset=UTF-8',\r\n    },\r\n    body: JSON.stringify(data),\r\n  };\r\n\r\n  const resourceName = (window as any).GetParentResourceName ? (window as any).GetParentResourceName() : 'rahe-hackingdevice';\r\n\r\n  const resp = await fetch(`https://${resourceName}/${eventName}`, options);\r\n\r\n  const respFormatted = await resp.json()\r\n\r\n  return respFormatted\r\n}\r\n","import { useEffect, useRef } from \"react\";\r\nimport { noop } from \"../utils/misc\";\r\nimport { fetchNui } from \"../utils/fetchNui\";\r\n\r\ntype FrameVisibleSetter = (bool: boolean) => void\r\n\r\nconst LISTENED_KEYS = [\"Escape\", \"Backspace\"]\r\n\r\n// Basic hook to listen for key presses in NUI in order to exit\r\nexport const useExitListener = (visibleSetter: FrameVisibleSetter) => {\r\n  const setterRef = useRef<FrameVisibleSetter>(noop)\r\n\r\n  useEffect(() => {\r\n    setterRef.current = visibleSetter\r\n  }, [visibleSetter])\r\n\r\n  useEffect(() => {\r\n    const keyHandler = (e: KeyboardEvent) => {\r\n      if (LISTENED_KEYS.includes(e.code)) {\r\n        setterRef.current(false)\r\n        fetchNui('close-frame', false)\r\n      }\r\n    }\r\n\r\n    window.addEventListener(\"keydown\", keyHandler)\r\n\r\n    return () => window.removeEventListener(\"keydown\", keyHandler)\r\n  }, []);\r\n\r\n\r\n}","// random has to be last.\r\nexport enum HackType {\r\n    NUMERIC = 'NUMERIC',\r\n    ALPHABET = 'ALPHABET',\r\n    ALPHANUMERIC = 'ALPHANUMERIC',\r\n    GREEK = 'GREEK',\r\n    BRAILLE = 'BRAILLE',\r\n    RUNES = 'RUNES',\r\n    RANDOM = 'RANDOM',\r\n}\r\n\r\n// random has to be last.\r\nexport enum GameType {\r\n    NORMAL = 'NORMAL',\r\n    MIRRORED = 'MIRRORED',\r\n    RANDOM = 'RANDOM',\r\n}\r\n\r\nexport enum SplashText {\r\n    CONNECTING = 'CONNECTING TO THE SYSTEM..',\r\n    PREPARING = 'PREPARING THE SYSTEM',\r\n}","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"style\", {\n  type: \"text/css\"\n}, \".st0{fill-rule:evenodd;clip-rule:evenodd;}\");\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  className: \"st0\",\n  d: \"M23.64,38.02l18.19-25.35C46.92,5.64,51.24-0.17,61.19,0c10.8,0.19,14.98,6.68,20.41,14.35 c4.86,6.87,9.73,13.73,14.59,20.6c7.61,10.7,17.47,17.69,5.36,30.34c7.18,4.96,12.1,12.36,14.96,21.97l6.37,21.01h-22.42V84.41 c0-2.33-1.91-4.24-4.24-4.24H26.66c-2.33,0-4.24,1.91-4.24,4.24v23.86H0c5.13-19.34,10.84-37.31,21.65-43.29 c-3.53-2.51-5.46-5.3-6.07-8.32C14.2,49.71,19.85,43.31,23.64,38.02L23.64,38.02z M59.33,69.41h4.36l-0.9,2.65 c5.11-0.35,10.03-3.84,12.65-10.59c2.77-7.14,5.77-3.5,5.5-15.68l-0.2-9.17c0.2-5.16-1.99-7.64-6.54-7.46 c-8.52,4.98-17.05,4.08-25.57,0c-3.5-0.89-5.57,1.49-6.54,6.39c0,5.71-0.88,14.88,1.64,19.9c1.31,2.61,2.8,3.38,4.39,6.69 c2.83,5.88,7.42,9.18,12.14,9.82L59.33,69.41L59.33,69.41z M59.57,56.35c-4.13,0.73-3.21,3.8-9.39-0.11h-1.08 c0.94,1.34,2.16,3.69,3.73,4.23c3.98,1.36,6.19,0.2,8.41-2.57c2.22,2.77,4.42,3.93,8.41,2.57c1.57-0.53,2.79-2.88,3.73-4.23H72.3 c-6.32,4-5.22,0.7-9.68,0.07C61.61,56.16,60.58,56.17,59.57,56.35L59.57,56.35z M59.99,47.47c-3.57-0.46-7.15-0.37-10.72,0 C53.03,44.47,58.34,42.87,59.99,47.47L59.99,47.47z M62.89,47.47c3.57-0.62,7.15-0.52,10.72,0C69.85,44.47,64.54,42.87,62.89,47.47 L62.89,47.47z M57.12,38.01c1.06,0.93,1.96,2.04,2.77,3.25c-3.13-1.91-6.28-3.45-9.54-3.59c0.53-0.7,1.12-1.16,1.77-1.4 C53.98,35.61,55.78,36.84,57.12,38.01L57.12,38.01z M65.76,38.01c-1.06,0.93-1.96,2.04-2.77,3.25c3.13-1.91,6.28-3.45,9.54-3.59 c-0.53-0.7-1.12-1.16-1.77-1.4C68.9,35.61,67.1,36.84,65.76,38.01L65.76,38.01z\"\n}));\n\nfunction SvgCrimeHacker(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 122.88 108.27\",\n    style: {\n      enableBackground: \"new 0 0 122.88 108.27\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCrimeHacker);\nexport default __webpack_public_path__ + \"static/media/crime-hacker.f9d7ab6d.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\nimport './Splash.css';\r\nimport { SplashText } from '../../../typings/gameOptions';\r\nimport { ReactComponent as HackerImage } from '../../../assets/crime-hacker.svg';\r\n\r\n\r\ntype SplashProps = {\r\n    text?: SplashText\r\n}\r\n\r\nconst Splash: React.FC<SplashProps> = ({ text = SplashText.PREPARING }) => {\r\n\r\n    return (\r\n        <div className='splash'>\r\n            <div className='icon'><HackerImage /></div>\r\n            <span className='text'>{text}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Splash;\r\n","import { HackType } from \"../typings/gameOptions\";\r\n\r\nexport const randomNumber = (min: number, max: number): number => {\r\n    return Math.floor(Math.random() * (max - min)) + min;\r\n}\r\n\r\nexport const sleep = (ms: number, fn: () => void) => setTimeout(fn, ms);\r\n\r\nexport const getRandomSetChar = (hackType: HackType): string => {\r\n    let characterString = '';\r\n    switch (hackType) {\r\n        case HackType.NUMERIC:\r\n            characterString = \"0123456789\";\r\n            break;\r\n        case HackType.ALPHABET:\r\n            characterString = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n            break;\r\n        case HackType.ALPHANUMERIC:\r\n            characterString = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\r\n            break;\r\n        case HackType.GREEK:\r\n            characterString = \"ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩ\";\r\n            break;\r\n        case HackType.BRAILLE:\r\n            characterString = \"⡀⡁⡂⡃⡄⡅⡆⡇⡈⡉⡊⡋⡌⡍⡎⡏⡐⡑⡒⡓⡔⡕⡖⡗⡘⡙⡚⡛⡜⡝⡞⡟⡠⡡⡢⡣⡤⡥⡦⡧⡨⡩⡪⡫⡬⡭⡮⡯⡰⡱⡲⡳⡴⡵⡶⡷⡸⡹⡺⡻⡼⡽⡾⡿\" +\r\n                \"⢀⢁⢂⢃⢄⢅⢆⢇⢈⢉⢊⢋⢌⢍⢎⢏⢐⢑⢒⢓⢔⢕⢖⢗⢘⢙⢚⢛⢜⢝⢞⢟⢠⢡⢢⢣⢤⢥⢦⢧⢨⢩⢪⢫⢬⢭⢮⢯⢰⢱⢲⢳⢴⢵⢶⢷⢸⢹⢺⢻⢼⢽⢾⢿\" +\r\n                \"⣀⣁⣂⣃⣄⣅⣆⣇⣈⣉⣊⣋⣌⣍⣎⣏⣐⣑⣒⣓⣔⣕⣖⣗⣘⣙⣚⣛⣜⣝⣞⣟⣠⣡⣢⣣⣤⣥⣦⣧⣨⣩⣪⣫⣬⣭⣮⣯⣰⣱⣲⣳⣴⣵⣶⣷⣸⣹⣺⣻⣼⣽⣾⣿\";\r\n            break;\r\n        case HackType.RUNES:\r\n            characterString = \"ᚠᚥᚧᚨᚩᚬᚭᚻᛐᛑᛒᛓᛔᛕᛖᛗᛘᛙᛚᛛᛜᛝᛞᛟᛤ\";\r\n            break;\r\n        default:\r\n            characterString = \"0123456789\";\r\n            break;\r\n    }\r\n\r\n    return characterString.charAt(randomNumber(0, characterString.length));\r\n}\r\n","import { useEffect, useRef } from \"react\";\r\nimport { noop } from \"../../../utils/misc\";\r\n\r\ntype PositionSetter = (position: number) => void;\r\ntype ValueChecker = () => void;\r\n\r\nconst LISTENED_KEYS = [\"KeyW\", \"ArrowUp\", \"KeyS\", \"ArrowDown\", \"KeyA\", \"ArrowLeft\", \"KeyD\", \"ArrowRight\", \"Enter\"];\r\n\r\n// Basic hook to listen for key presses in NUI in order to exit\r\nexport const useHackMoveListener = (position: number, positionSetter: PositionSetter, valueChecker: ValueChecker) => {\r\n    const setterRef = useRef<PositionSetter>(noop);\r\n    const valueRef = useRef<ValueChecker>(noop);\r\n    const positionRef = useRef<number>(0);\r\n\r\n    useEffect(() => {\r\n        setterRef.current = positionSetter\r\n    }, [positionSetter]);\r\n\r\n    useEffect(() => {\r\n        valueRef.current = valueChecker\r\n    }, [valueChecker]);\r\n\r\n    useEffect(() => {\r\n        positionRef.current = position;\r\n    }, [position]);\r\n\r\n    useEffect(() => {\r\n        const keyHandler = (e: KeyboardEvent) => {\r\n            if (LISTENED_KEYS.includes(e.code)) {\r\n                switch (e.code) {\r\n                    case \"KeyW\":\r\n                    case \"ArrowUp\":\r\n                        positionRef.current -= 10;\r\n                        if (positionRef.current < 0) positionRef.current += 80;\r\n                        setterRef.current(positionRef.current);\r\n                        break;\r\n\r\n                    case \"KeyS\":\r\n                    case \"ArrowDown\":\r\n                        positionRef.current += 10;\r\n                        positionRef.current %= 80;\r\n                        setterRef.current(positionRef.current);\r\n                        break;\r\n                    case \"KeyA\":\r\n                    case \"ArrowLeft\":\r\n                        positionRef.current--;\r\n                        if (positionRef.current < 0) positionRef.current = 79;\r\n                        setterRef.current(positionRef.current);\r\n                        break;\r\n                    case \"KeyD\":\r\n                    case \"ArrowRight\":\r\n                        positionRef.current++;\r\n                        positionRef.current %= 80;\r\n                        setterRef.current(positionRef.current);\r\n                        break;\r\n                    case \"Enter\":\r\n                        valueRef.current();\r\n                        break;\r\n                    default: break;\r\n                }\r\n            }\r\n        }\r\n\r\n        window.addEventListener(\"keydown\", keyHandler)\r\n\r\n        return () => window.removeEventListener(\"keydown\", keyHandler)\r\n    }, []);\r\n\r\n\r\n}","import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport classNames from 'classnames';\r\nimport { GameType, HackType } from '../../../typings/gameOptions';\r\nimport './Hack.css';\r\nimport { getRandomSetChar, randomNumber, sleep } from '../../../utils/random';\r\nimport { useHackMoveListener } from './useHackMoveListener';\r\nimport { fetchNui } from '../../../utils/fetchNui';\r\n\r\ntype HackProps = {\r\n    hackType: HackType,\r\n    gameType: GameType,\r\n    duration: number\r\n}\r\n\r\nconst Hack: React.FC<HackProps> = ({ hackType, gameType, duration }) => {\r\n    const timerStart = useRef<Date>(new Date());\r\n    const timerGame: any = useRef();\r\n    const timerTime = useRef<any>();\r\n    const timerFinish: any = useRef();\r\n    const [correctPosition] = useState<number>(randomNumber(0, 79));\r\n    const codes = useRef<any[]>([]);\r\n    const [showCorrect, setShowCorrect] = useState(false);\r\n    const codesPosition = useRef<number>(1);\r\n    const currentPosition = useRef<number>(43);\r\n    const [timerValue, setTimerValue] = useState<string>('');\r\n\r\n    const getGroupFromPosition = (position: number): Array<number> => {\r\n        let group = [position];\r\n        for (let i = 1; i < 4; i++) {\r\n            if (position + 1 >= 80) group.push(position + i - 80);\r\n            else group.push(position + i);\r\n        }\r\n        return group;\r\n    }\r\n\r\n    const [toFind] = useState<Array<number>>(getGroupFromPosition(correctPosition));\r\n\r\n\r\n    const moveCodes = useCallback(() => {\r\n        let codesPos = (codesPosition.current + 1) % 80;\r\n        codesPosition.current = codesPos;\r\n\r\n        let temporaryCodes = [...codes.current];\r\n        temporaryCodes.push(temporaryCodes.shift());\r\n        codes.current = temporaryCodes;\r\n\r\n    }, [codesPosition]);\r\n\r\n    const timer = () => {\r\n        let msString;\r\n        let timerNow = new Date();\r\n        let timerDiff = new Date();\r\n        timerDiff.setTime(timerNow.getTime() - timerStart.current.getTime());\r\n        let ms = (999 - timerDiff.getMilliseconds());\r\n        let sec = timerDiff.getSeconds();\r\n        if (ms > 99) msString = Math.floor(ms / 10);\r\n        else if (ms < 10) msString = `0${ms}`;\r\n        else msString = ms;\r\n        setTimerValue(`${duration - 1 - sec}.${msString}`);\r\n    }\r\n\r\n    const check = () => {\r\n        clearInterval(timerTime.current);\r\n\r\n        let currentAttempt = (currentPosition.current + codesPosition.current);\r\n        currentAttempt %= 80;\r\n\r\n        setShowCorrect(true);\r\n\r\n        setTimeout(() => {\r\n            if (currentAttempt === correctPosition) {\r\n                fetchNui('close-frame', true);\r\n            } else {\r\n                fetchNui('close-frame', false);\r\n            }\r\n        }, 1500);\r\n\r\n        resetGame();\r\n    }\r\n\r\n    const resetGame = () => {\r\n        clearInterval(timerTime.current);\r\n        clearTimeout(timerGame.current);\r\n        clearTimeout(timerFinish.current);\r\n    }\r\n\r\n    const hackClassName = classNames({\r\n        'hack': true,\r\n        'mirrored': gameType === GameType.MIRRORED\r\n    });\r\n\r\n    function generateCodes() {\r\n        let tempCodes = [];\r\n        for (let i = 0; i < 80; i++) {\r\n            tempCodes.push(getRandomSetChar(hackType) + getRandomSetChar(hackType));\r\n        }\r\n        codes.current = tempCodes;\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        generateCodes();\r\n        currentPosition.current = 43;\r\n        codesPosition.current = 0;\r\n        setShowCorrect(false);\r\n\r\n        timerStart.current = new Date();\r\n        timerTime.current = setInterval(timer, 1);\r\n        timerGame.current = setInterval(moveCodes, 1500);\r\n        timerFinish.current = sleep(duration * 1000, () => {\r\n            check();\r\n        });\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const checkTrail = (position: number, trailPosition: number) => {\r\n        if (trailPosition >= 80) return position === trailPosition - 80;\r\n        return position === trailPosition;\r\n    }\r\n\r\n    const shouldShowAsCurrent = (position: number) => {\r\n        if (position === currentPosition.current) return true;\r\n        if (checkTrail(position, currentPosition.current + 1)) return true;\r\n        if (checkTrail(position, currentPosition.current + 2)) return true;\r\n        if (checkTrail(position, currentPosition.current + 3)) return true;\r\n        return false;\r\n    }\r\n\r\n    useHackMoveListener(currentPosition.current, (newPos) => currentPosition.current = newPos, check);\r\n\r\n\r\n    return (\r\n        <div className={hackClassName}>\r\n            <div className='find'>\r\n                {toFind.map((toFind) => {\r\n                    let positionToCheck = toFind - codesPosition.current;\r\n                    if (positionToCheck < 0) positionToCheck += 80;\r\n                    if (positionToCheck >= 80) positionToCheck -= 80;\r\n\r\n                    return (<div key={toFind}>{codes.current[positionToCheck]}</div>);\r\n                })}\r\n            </div>\r\n            <div className='timer'>{timerValue}</div>\r\n            <div className='codes'>\r\n                {codes.current.map((code, i) => {\r\n                    let codesCorrect = i + codesPosition.current;\r\n                    if (codesCorrect >= 80) codesCorrect -= 80;\r\n                    const classname = classNames({\r\n                        'current': shouldShowAsCurrent(i),\r\n                        'correct': showCorrect && toFind.some((tf) => tf === codesCorrect),\r\n                    })\r\n                    return (<div className={classname} key={code + i}>{code}</div>);\r\n                })\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Hack;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { SplashText, HackType, GameType } from '../../typings/gameOptions';\r\nimport Splash from './Splash/Splash';\r\nimport './Game.css';\r\nimport Hack from './Hack/Hack';\r\n\r\n// https://sharkiller.ddns.net/nopixel_minigame/hackingdevice/minigame.js?v=20210808\r\n\r\ntype GameProps = {\r\n    hackType: HackType,\r\n    gameType: GameType,\r\n    duration: number\r\n}\r\n\r\nconst Game: React.FC<GameProps> = ({ hackType, gameType, duration }) => {\r\n    const [splashText, setSplashText] = useState(SplashText.PREPARING);\r\n    const [gameStarted, setGameStarted] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (!gameStarted) {\r\n            setTimeout(() => {\r\n                setGameStarted(true);\r\n                setSplashText(SplashText.CONNECTING);\r\n            }, 1500);\r\n\r\n        }\r\n    }, [gameStarted, duration, hackType])\r\n    return (\r\n        <div className='minigame'>\r\n            <Splash text={splashText}></Splash>\r\n            {gameStarted && (\r\n                <Hack hackType={hackType} gameType={gameType} duration={duration} />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Game;\r\n","import React, { useState } from 'react';\r\nimport './App.css'\r\nimport { useNuiEvent } from \"../../hooks/useNuiEvent\";\r\nimport { debugData } from \"../../utils/debugData\";\r\nimport { useExitListener } from \"../../hooks/useExitListener\";\r\nimport Game from '../Game/Game';\r\nimport { GameType, HackType } from '../../typings/gameOptions';\r\n\r\n// This will set the NUI to visible if we are\r\n// developing in browser\r\ndebugData([\r\n  {\r\n    action: 'setVisible',\r\n    data: {\r\n      show: true,\r\n      hackType: \"NUMERIC\",\r\n      gameType: \"NORMAL\",\r\n      duration: 100\r\n    },\r\n  }\r\n]);\r\n\r\ntype SetVisibleProps = {\r\n  show: boolean,\r\n  hackType: string,\r\n  gameType: string,\r\n  duration: number\r\n}\r\n\r\n\r\nconst App: React.FC = () => {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  const [hackType, setHackType] = useState<HackType>(HackType.ALPHANUMERIC);\r\n  const [gameType, setGameType] = useState<GameType>(GameType.RANDOM);\r\n  const [duration, setDuration] = useState<number>(0);\r\n\r\n  useNuiEvent<SetVisibleProps>('setVisible', (data) => {\r\n    // This is our handler for the setVisible action.\r\n    setIsVisible(data.show);\r\n    if (data.show) {\r\n      let selectedHackType = data.hackType as HackType;\r\n      let selectedGameType = data.gameType as GameType;\r\n      if (selectedHackType === HackType.RANDOM) {\r\n        const enumValues = Object.keys(HackType);\r\n        const enumKey = enumValues[Math.floor(Math.random() * (enumValues.length - 1))];\r\n        selectedHackType = (enumKey as HackType);\r\n      }\r\n      if (selectedGameType === GameType.RANDOM) {\r\n        const enumValues = Object.keys(GameType);\r\n        const enumKey = enumValues[Math.floor(Math.random() * (enumValues.length - 1))];\r\n        selectedGameType = (enumKey as GameType);\r\n      }\r\n      setHackType(selectedHackType);\r\n      setGameType(selectedGameType);\r\n      setDuration(data.duration);\r\n    }\r\n  });\r\n\r\n  useExitListener(setIsVisible);\r\n\r\n  return (\r\n    <div className=\"nui-wrapper\">\r\n      {isVisible && (\r\n        <Game hackType={hackType} gameType={gameType} duration={duration} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import {MutableRefObject, useEffect, useRef} from \"react\";\r\nimport {noop} from \"../utils/misc\";\r\n\r\ninterface NuiMessageData<T = unknown> {\r\n  action: string;\r\n  data: T;\r\n}\r\n\r\ntype NuiHandlerSignature<T> = (data: T) => void;\r\n\r\n/**\r\n * A hook that manage events listeners for receiving data from the client scripts\r\n * @param action The specific `action` that should be listened for.\r\n * @param handler The callback function that will handle data relayed by this hook\r\n *\r\n * @example\r\n * useNuiEvent<{visibility: true, wasVisible: 'something'}>('setVisible', (data) => {\r\n *   // whatever logic you want\r\n * })\r\n *\r\n **/\r\n\r\nexport const useNuiEvent = <T = any>(\r\n  action: string,\r\n  handler: (data: T) => void\r\n) => {\r\n  const savedHandler: MutableRefObject<NuiHandlerSignature<T>> = useRef(noop);\r\n\r\n  // When handler value changes set mutable ref to handler val\r\n  useEffect(() => {\r\n    savedHandler.current = handler;\r\n  }, [handler]);\r\n\r\n  useEffect(() => {\r\n    const eventListener = (event: MessageEvent<NuiMessageData<T>>) => {\r\n      const { action: eventAction, data } = event.data;\r\n\r\n      if (savedHandler.current) {\r\n        if (eventAction === action) {\r\n          savedHandler.current(data);\r\n        }\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"message\", eventListener);\r\n    // Remove Event Listener on component cleanup\r\n    return () => window.removeEventListener(\"message\", eventListener);\r\n  }, [action]);\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}